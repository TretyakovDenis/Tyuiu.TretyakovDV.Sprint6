<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxFormula_TDV.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGsAAAA6CAYAAAC3badeAAAABGdBTUEAALGPC/xhBQAAA0NJREFUeF7t
        mImRwjAMRemEUiiFUiiFUiiFUth9QZ9RPM4BOIkd9GY8sXISfR0OhyDYDbfb7XG9Xh+Xy+XB3HYHNXI8
        HjuB7vf7Q/OgUhBJ29PpFGK1AKVQwgUVEz2rQRAtBKsUrQTNjEVGzVD6GGZ24p3P5xCrVhCL7FLfst1v
        Q1YitO7FPBYslUL59OIgfHwKVIgtSnpiad/TCmqjW5xIMMpg9L8JtMKjDPn50o7jWbaS7J4VQk1AVCOO
        mdBFOvvW6B88R4KxtVIY5Eh7xpoN3mevbeObbS44j2HmxyA4TtfIZYsFSe+YBHtawSg42TvPZ11pJFaa
        2f+bxZ7ZPAhE35DznnufvcSmi0HW+eessahpGpyDk3Aake3ndspiECB6voYdWp8SD+eFNn2JX4CI8fX4
        GxTxZgYloYyUdm5J8QMHjbO0Y8muNb+BmoLsYKSrk3R5m8I1Q05FQN1TmSJ7TkNfIgiaB8c556XOGXUY
        jh8qgQjD1q5/BUK6hB1i7N4/ixzH1mcJAuJYM7NwPJclfp/ESsSbJP09gIDsmxpzs7dZ0khmzoubOcRk
        qTKR3i5pc4Lll+lFI0KNlSFlzJQIBMEnTrff8vZ1uyfn+KESJ3TN0+qT3gfBzHyV3SlyYs0tg4zMb9f9
        Whl5UrHmRHV6jQeBEIVjzJWh2N+IFRg4lMhVY2fYoTGyYqn/cS+czr2YzxUKuO6T8vlz4NyxfiWmSuU3
        KGjMbBJ8gx+VCLnAfhtuphvZdtaNlYlmFkXZaWaT+N+Pn3gnMz9D4ihDVLKYT7Fk9JO1RSJxI9KgZ1uk
        rON0BpEwVyixhFPV58xsFt8iqngniWxmESgX/kX3QDXvVPKHLCH+1qhymbk9JRxMOd2bUASxArl0uwgK
        gjg+o6rKrtZQJjOW+FSw1d9rfL10/2VS57Fa21sZ3gVkFeL4PmJlKsSqDURK/y6zeYjVApTAsQ9XxCT7
        OM/PoxetTC7TPBxPVnNdCWXfHv5taQqyIxGjh+9tCBoCbQSlbEyoFM5nmBmsBSL50jdUBj1klT/PZ12w
        EDhciwWNoYxBIIQ1YV7nvJORwYc4p/fGUC/SPxzKRD+3U4IgCIIgCIIgCA6Hw+EP4plEtZSDmKEAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>